<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cobee.rentalhouse.core.dao.impl.RentalClientMapper">
	
	<sql id="selectFromClause">
		a.id,
		a.create_date,
		a.create_by,
		a.update_date,
		a.update_by,
		a.remarks,
		a.name,
		a.mobile,
		a.id_card_no,
		a.house_id,
		a.status,
		a.gender,
		b.id as "rentalHouseResource.id",
		b.name as "rentalHouseResource.name",
		b.address as "rentalHouseResource.address",
		c.fullname as "rentalHouseResource.baseArea.fullname",
		d.id as "currentRentalClientCheckinOrder.id"
		from rental_client a
		left join rental_house_resource b on (b.id = a.house_id and a.status = 0 and b.status = 1)
		left join base_area c on c.city_id = b.city_id
		left join rental_client_checkin_order d on (d.house_id = a.house_id and d.rental_client_id = a.id and d.status = 0)
	</sql>
	
	<sql id="whereClause">
		<where>
			<trim prefixOverrides="and" >
				<if test="delFlag != null">
					and a.del_flag = #{delFlag}
				</if>
				
				<if test="createBy != null and createBy !=''">
					and a.create_by = #{createBy}
				</if>
				
				<if test="name != null and name != ''">
					and a.name like concat('%', #{name}, '%')
				</if>
				<if test="mobile != null and mobile != ''">
					and a.mobile = #{mobile}
				</if>
				<if test="status != null">
					and a.status = #{status}
				</if>
			</trim>
		</where>
	</sql>
	
	<select id="list" resultType="RentalClient" >
	
		select <include refid="selectFromClause" />
		
		<include refid="whereClause"></include>
		
		<choose>
			<when test="pageRequest != null and pageRequest.orderByClause != null and pageRequest.orderByClause != ''">
				${pageRequest.orderByClause}
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
		
		<if test="pageRequest != null and pageRequest.limitClause != null and pageRequest.limitClause != ''">
			${pageRequest.limitClause}
		</if>
	
	</select>
	
	<select id="get" resultType="RentalClient" parameterType="integer" >
	
		select <include refid="selectFromClause" /> where a.id = #{id}
		
	</select>
	
	<select id="queryByCount" resultType="integer" >
	
		select count(1) from rental_client a
		
		<include refid="whereClause"></include>
		
	</select>
	
	<update id="delete" parameterType="integer" >
	
		delete from rental_client where id = #{id}
		
	</update>
	
	<update id="deleteByLogic" parameterType="integer" >
	
		update rental_client set del_flag = 1 where id = #{id}
		
	</update>
	
	<update id="insertBySelective" parameterType="RentalClient">
		
		insert into rental_client
		(
			<trim suffixOverrides=",">
				<if test="createDate != null">
					create_date,
				</if>
				<if test="createBy != null">
					create_by,
				</if>
				<if test="updateDate != null">
					update_date,
				</if>
				<if test="updateBy != null">
					update_by,
				</if>
				<if test="remarks != null">
					remarks,
				</if>
				
				
				<if test="name != null">
					name,
				</if>
				<if test="mobile != null">
					mobile,
				</if>
				<if test="idCardNo != null">
					id_card_no,
				</if>
				<if test="houseId != null">
					house_id,
				</if>
				
				
				<if test="status != null">
					status,
				</if>
				
				<if test="gender != null">
					gender,
				</if>
				
			</trim>
		) values (
			<trim suffixOverrides=",">
				<if test="createDate != null">
					#{createDate},
				</if>
				<if test="createBy != null">
					#{createBy},
				</if>
				<if test="updateDate != null">
					#{updateDate},
				</if>
				<if test="updateBy != null">
					#{updateBy},
				</if>
				<if test="remarks != null">
					#{remarks},
				</if>
				
				<if test="name != null">
					#{name},
				</if>
				<if test="mobile != null">
					#{mobile},
				</if>
				<if test="idCardNo != null">
					#{idCardNo},
				</if>
				<if test="houseId != null">
					#{houseId},
				</if>
				
				<if test="status != null">
					#{status},
				</if>
				<if test="gender != null">
					#{gender},
				</if>
				
			</trim>
		)
	
	</update>
	
	<update id="updateBySelective" parameterType="RentalClient">
		
		update rental_client set 
		
		<trim suffixOverrides=",">
		
				<if test="createDate != null">
					create_date = #{createDate},
				</if>
				<if test="createBy != null">
					create_by = #{createBy},
				</if>
				<if test="updateDate != null">
					update_date = #{updateDate},
				</if>
				<if test="updateBy != null">
					update_by = #{updateBy},
				</if>
				<if test="remarks != null">
					remarks = #{remarks},
				</if>
				
				<if test="name != null">
					name = #{name},
				</if>
				<if test="mobile != null">
					mobile = #{mobile},
				</if>
				<if test="idCardNo != null">
					id_Card_No = #{idCardNo},
				</if>
				<if test="houseId != null">
					house_Id = #{houseId},
				</if>
				
				<if test="status != null">
					status = #{status},
				</if>
				
				<if test="gender != null">
					gender = #{gender},
				</if>
				
			</trim>
		
		where id = #{id}
	
	</update>
	
	
</mapper>